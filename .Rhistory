summary(km)
# estimation de la fonction de survie (proba de ne pas avoir fait l’event avant le temps t ) par la méthode KM
km <- survfit(Surv(time,status_bin)~ulcer,data=mela)
# plot de la fonction de survie estimée
#survminer et ggsurv plot
# permet de comparer les courbes de survie par le test du logrank
#H0 Egalité des fonctions de survie vs.
#H1 Au moins une des fonctions de survie est différente des autres
#comparer le nb d'event obs dans chaque groupe (traitement ici) à ce qui est attendu sous H0
survdiff(Surv(time,status_bin)~ulcer,data=mela)
ggsurvplot(km,
data = mela,
surv.median.line = "hv",
# Change legends: title & labels
legend.title = "Ucler",
legend.labs = c("Absent", "Présent"),
# Add p-value and intervals
pval = TRUE,
conf.int = TRUE,
# Add risk table
risk.table = TRUE,
tables.height = 0.2,
tables.theme = theme_cleantable(),
palette = c("#C0B9DD", "#77CB85"),
ggtheme = theme_bw())
mela
summary(coxph(Surv(time,status_bin)~ulcer+thickness,data=mela)) # modèle de Cox
cox.zph(coxph(Surv(time,status_bin)~ulcer+thickness,data=mela))
mela %>%
mutate(ucler = ulcer %>% as.factor) -> mela
summary(coxph(Surv(time,status_bin)~ulcer+thickness,data=mela)) # modèle de Cox
cox.zph(coxph(Surv(time,status_bin)~ulcer+thickness,data=mela))
mela %>%
mutate(ucler = ulcer %>% as.factor) -> mela
summary(coxph(Surv(time,status_bin)~ulcer+thickness,data=mela)) # modèle de Cox
cox.zph(coxph(Surv(time,status_bin)~ulcer+thickness,data=mela))
resMart <- residuals(coxph(Surv(time,status_bin)~ulcer+thickness,data=mela), type="martingale")
plot(bladder_v1$number, resMart, main="Martingale-residuals for number",
xlab="Number", ylab="Residus", pch=20)
resMart <- residuals(coxph(Surv(time,status_bin)~ulcer+thickness,data=mela), type="martingale")
plot(bladder_v1$number, resMart, main="Martingale-residuals for number",
xlab="Number", ylab="Residus", pch=20)
mela %>%
mutate(ucler = ulcer %>% as.factor) -> mela
summary(coxph(Surv(time,status_bin)~ulcer+thickness,data=mela)) # modèle de Cox
cox.zph(coxph(Surv(time,status_bin)~ulcer+thickness,data=mela))
resMart <- residuals(coxph(Surv(time,status_bin)~ulcer+thickness,data=mela), type="martingale")
plot(mela$thickness, resMart, main="Martingale-residuals for number",
xlab="Number", ylab="Residus", pch=20)
lines(loess.smooth(mela$thickness, resMart), lwd=2, col="blue")
summary(coxph(Surv(time,status_bin)~ulcer+thickness+sex+age+year,data=mela)) # modèle de Cox
cox.zph(coxph(Surv(time,status_bin)~ulcer+thickness+sex+age+year,data=mela))
mela %>%
mutate(ucler = ulcer %>% as.factor) -> mela
#Creation du modèle de cox
model <- coxph(Surv(time,status_bin)~ulcer+thickness+sex+age+year,data=mela)
summary(model)
# HHP
cox.zph(model)
# Hypothèses de log linéarité
resmart = residuals(model)
# Age
plot(mela$age, resmart, pch = 20)
lines(loess.smooth(mela$age, resmart), lwd=2, col="blue")
# sex
plot(mela$sex, resmart, pch = 20)
lines(loess.smooth(mela$sex, resmart), lwd=2, col="blue")
mela %>%
mutate(ucler = ulcer %>% as.factor) -> mela
#Creation du modèle de cox
model <- coxph(Surv(time,status_bin)~ulcer+thickness+sex+age+year,data=mela)
summary(model)
# HHP
cox.zph(model)
# Hypothèses de log linéarité
resmart = residuals(model)
# Age
plot(mela$age, resmart, pch = 20)
lines(loess.smooth(mela$age, resmart), lwd=2, col="blue")
# year
plot(mela$year, resmart, pch = 20)
lines(loess.smooth(mela$year, resmart), lwd=2, col="blue")
# thickness
plot(mela$thickness, resmart, pch = 20)
lines(loess.smooth(mela$thickness, resmart), lwd=2, col="blue")
#KM
KM<-plot(survfit(Surv(time,status)~ulcer,data=mela),
col=c("blue","red"),xlab="Temps",ylab="Survie",
main="Kaplan-Meier",bty="l")
#KM
km <- survfit(Surv(time,status)~ulcer,data=mela)
ggsurvplot(km,
data = mela,
surv.median.line = "hv",
# Change legends: title & labels
legend.title = "Ucler",
legend.labs = c("Absent", "Présent"),
# Add p-value and intervals
pval = TRUE,
conf.int = TRUE,
# Add risk table
risk.table = TRUE,
tables.height = 0.2,
tables.theme = theme_cleantable(),
palette = c("#C0B9DD", "#77CB85"),
ggtheme = theme_bw())
#Kalbfleisch et Prentice
KM2<-plot(cuminc(mela$time,mela$status,mela$ulcer),
col=c("blue","red","blue","red"),lty=c(1,1,2,2),
xlab="Temps",ylab="Incidence cumulée",
main="Kalbfleish et Prentice")
#Kalbfleisch et Prentice
KM2<-plot(cuminc(mela$time,mela$status,mela$ulcer),
col=c("blue","red","green","blue","red","green"),lty=c(1,1,2,2,3,3),
xlab="Temps",ylab="Incidence cumulée",
main="Kalbfleish et Prentice")
#Kalbfleisch et Prentice
KM2<-plot(cuminc(bladder_v2$stop,bladder_v2$recidive,bladder_v2$treatment),
col=c("blue","red","blue","red"),lty=c(1,1,2,2),
xlab="Temps",ylab="Incidence cumulée",
main="Kalbfleish et Prentice")
#test de gray
cuminc(mela$time,mela$status,mela$ulcer)
par(mfrow=c(1,3))
#KM
km <- survfit(Surv(time,status)~ulcer,data=mela)
ggsurvplot(km,
data = mela,
surv.median.line = "hv",
# Change legends: title & labels
legend.title = "Ucler",
legend.labs = c("Absent", "Présent"),
# Add p-value and intervals
pval = TRUE,
conf.int = TRUE,
# Add risk table
risk.table = TRUE,
tables.height = 0.2,
tables.theme = theme_cleantable(),
palette = c("#C0B9DD", "#77CB85"),
ggtheme = theme_bw())
#Kalbfleisch et Prentice
KM2<-plot(cuminc(mela$time,mela$status,mela$ulcer),
col=c("blue","red","green","blue","red","green"),lty=c(1,1,2,2,3,3),
xlab="Temps",ylab="Incidence cumulée",
main="Kalbfleish et Prentice")
#test de gray
cuminc(mela$time,mela$status,mela$ulcer)
#test de gray
cuminc(mela$time,mela$status,mela$ulcer)
mela %>%
group_by(status,ulcer)
mela %>%
group_by(status,ulcer) %>% count
summary(model)
# HHP
cox.zph(model)
cov1 <- model.matrix(~ factor(ulcer) +thickness+sex+age+year,data = mela)[, -1] # met en forme les covariables pour le modèle
summary(crr(mela$time,mela$status,cov1=cov1))
par(mfrow=c(1,2))
mod2<-ccrr(mela$time,mela$status,cov1=cov1)
mod2<-crr(mela$time,mela$status,cov1=cov1)
for(j in 1:ncol(mod2$res))
scatter.smooth(mod2$uft, mod2$res[,j],
main = names(mod2$coef)[j],
xlab ="Temps",
ylab ="Résidus de Schoenfeld")
#test de lin
library(remotes)
library(crskdiag)
diag_crr(Crsk(stop,recidive)~treatment+number,data=bladder_v2,test="prop",seed=1234)#permet de faire le test de Lin
install.packages('crskdiag')
install.packages("~/Downloads/crskdiag_1.0.1.tar", repos = NULL)
install.packages("~/Downloads/crskdiag_1.0.1.tar", repos = NULL)
install.packages("~/Downloads/crskdiag_1.0.tar", repos = NULL)
install.packages('/Users/anto/Downloads/crskdiag_1.0.1.tar', repos=NULL, type='source')
library(crskdiag)
install.packages('./Users/anto/Downloads/crskdiag_1.0.1.tar', repos=NULL, type='source')
par(mfrow=c(1,3))
#KM
km <- survfit(Surv(time,status)~ulcer,data=mela)
ggsurvplot(km,
data = mela,
surv.median.line = "hv",
# Change legends: title & labels
legend.title = "Ucler",
legend.labs = c("Absent", "Présent"),
# Add p-value and intervals
pval = TRUE,
conf.int = TRUE,
# Add risk table
risk.table = TRUE,
tables.height = 0.2,
tables.theme = theme_cleantable(),
palette = c("#C0B9DD", "#77CB85"),
ggtheme = theme_bw())
#Kalbfleisch et Prentice
KM2<-plot(cuminc(mela$time,mela$status,mela$ulcer),
col=c("blue","red","green","blue","red","green"),lty=c(1,1,2,2,3,3),
xlab="Temps",ylab="Incidence cumulée",
main="Kalbfleish et Prentice")
#test de gray
cuminc(mela$time,mela$status,mela$ulcer)
cov1 <- model.matrix(~ factor(ulcer) +thickness+sex+age+year,data = mela)[, -1] # met en forme les covariables pour le modèle
summary(crr(mela$time,mela$status,cov1=cov1))
par(mfrow=c(1,2))
mod2<-crr(mela$time,mela$status,cov1=cov1)
for(j in 1:ncol(mod2$res))
scatter.smooth(mod2$uft, mod2$res[,j],
main = names(mod2$coef)[j],
xlab ="Temps",
ylab ="Résidus de Schoenfeld")
#test de lin
library(remotes)
library(crskdiag)
mela %>%
mutate(ucler = ulcer %>% as.factor) -> mela
#Creation du modèle de cox
model <- coxph(Surv(time,status_bin)~ulcer+thickness+sex+age+year,data=mela)
summary(model)
# HHP
cox.zph(model)
# Hypothèses de log linéarité
resmart = residuals(model)
# Age
plot(mela$age, resmart, pch = 20)
lines(loess.smooth(mela$age, resmart), lwd=2, col="blue")
# year
plot(mela$year, resmart, pch = 20)
lines(loess.smooth(mela$year, resmart), lwd=2, col="blue")
# thickness
plot(mela$thickness, resmart, pch = 20)
lines(loess.smooth(mela$thickness, resmart), lwd=2, col="blue")
install.packages('./Users/anto/Downloads/crskdiag_1.0.1.tar', repos=NULL, type='source')
install.packages('/Users/anto/Downloads/crskdiag_1.0.1.tar', repos=NULL, type='source')
install.packages('C:/Users/User/Downloads/abc_2.1.zip', repos=NULL, type='source')
install.packages("lgfortan")
knitr::opts_chunk$set(echo = TRUE)
library(survival)
library(tidyverse)
library(MASS)
library(cmprsk)
library(packHV)
library(survminer)
mela = Melanoma
mela %>% mutate(
status = status,
sex= sex %>% as.factor(),
ulcer = ulcer %>% as.factor(),
status_bin = if_else(status ==1,0,1) ,
id = row_number()) -> mela
#  thick_taille = if_else(thickness >= 3.56, 2,if_else(thickness <= 0.97,0,1)) %>% as.factor())-> mela
mela %>% summary()
#chi2 et student ??Genre voir si les deux populations des deux traitements sont comparables et tout...
# estimation de la fonction de survie (proba de ne pas avoir fait l’event avant le temps t ) par la méthode KM
km <- survfit(Surv(time,status_bin)~ulcer,data=mela)
# plot de la fonction de survie estimée
#survminer et ggsurv plot
# permet de comparer les courbes de survie par le test du logrank
#H0 Egalité des fonctions de survie vs.
#H1 Au moins une des fonctions de survie est différente des autres
#comparer le nb d'event obs dans chaque groupe (traitement ici) à ce qui est attendu sous H0
survdiff(Surv(time,status_bin)~ulcer,data=mela)
ggsurvplot(km,
data = mela,
surv.median.line = "hv",
# Change legends: title & labels
legend.title = "Ucler",
legend.labs = c("Absent", "Présent"),
# Add p-value and intervals
pval = TRUE,
conf.int = TRUE,
# Add risk table
risk.table = TRUE,
tables.height = 0.2,
tables.theme = theme_cleantable(),
palette = c("#C0B9DD", "#77CB85"),
ggtheme = theme_bw())
mela %>%
mutate(ucler = ulcer %>% as.factor) -> mela
#Creation du modèle de cox
model <- coxph(Surv(time,status_bin)~ulcer+thickness+sex+age+year,data=mela)
summary(model)
# HHP
cox.zph(model)
# Hypothèses de log linéarité
resmart = residuals(model)
# Age
plot(mela$age, resmart, pch = 20)
lines(loess.smooth(mela$age, resmart), lwd=2, col="blue")
# year
plot(mela$year, resmart, pch = 20)
lines(loess.smooth(mela$year, resmart), lwd=2, col="blue")
# thickness
plot(mela$thickness, resmart, pch = 20)
lines(loess.smooth(mela$thickness, resmart), lwd=2, col="blue")
mela %>%
group_by(status,ulcer) %>% count
par(mfrow=c(1,3))
#KM
km <- survfit(Surv(time,status)~ulcer,data=mela)
ggsurvplot(km,
data = mela,
surv.median.line = "hv",
# Change legends: title & labels
legend.title = "Ucler",
legend.labs = c("Absent", "Présent"),
# Add p-value and intervals
pval = TRUE,
conf.int = TRUE,
# Add risk table
risk.table = TRUE,
tables.height = 0.2,
tables.theme = theme_cleantable(),
palette = c("#C0B9DD", "#77CB85"),
ggtheme = theme_bw())
#Kalbfleisch et Prentice
KM2<-plot(cuminc(mela$time,mela$status,mela$ulcer),
col=c("blue","red","green","blue","red","green"),lty=c(1,1,2,2,3,3),
xlab="Temps",ylab="Incidence cumulée",
main="Kalbfleish et Prentice")
#test de gray
cuminc(mela$time,mela$status,mela$ulcer)
cov1 <- model.matrix(~ factor(ulcer) +thickness+sex+age+year,data = mela)[, -1] # met en forme les covariables pour le modèle
summary(crr(mela$time,mela$status,cov1=cov1))
par(mfrow=c(1,2))
mod2<-crr(mela$time,mela$status,cov1=cov1)
for(j in 1:ncol(mod2$res))
scatter.smooth(mod2$uft, mod2$res[,j],
main = names(mod2$coef)[j],
xlab ="Temps",
ylab ="Résidus de Schoenfeld")
#test de lin
library(remotes)
library(crskdiag)
#KM
km <- survfit(Surv(time,status)~ulcer,data=mela)
summary(km)
ggsurvplot(km,
data = mela,
surv.median.line = "hv",
# Change legends: title & labels
legend.title = "Ucler",
legend.labs = c("Absent", "Présent"),
# Add p-value and intervals
pval = TRUE,
conf.int = TRUE,
# Add risk table
risk.table = TRUE,
tables.height = 0.2,
tables.theme = theme_cleantable(),
palette = c("#C0B9DD", "#77CB85"),
ggtheme = theme_bw())
#Kalbfleisch et Prentice
KM2<-plot(cuminc(mela$time,mela$status,mela$ulcer),
col=c("blue","red","green","blue","red","green"),lty=c(1,1,2,2,3,3),
xlab="Temps",ylab="Incidence cumulée",
main="Kalbfleish et Prentice")
#test de gray
cuminc(mela$time,mela$status,mela$ulcer)
cov1 <- model.matrix(~ factor(ulcer) +thickness+sex+age+year,data = mela)[, -1] # met en forme les covariables pour le modèle
summary(crr(mela$time,mela$status,cov1=cov1))
mod2<-crr(mela$time,mela$status,cov1=cov1)
for(j in 1:ncol(mod2$res))
scatter.smooth(mod2$uft, mod2$res[,j],
main = names(mod2$coef)[j],
xlab ="Temps",
ylab ="Résidus de Schoenfeld")
#test de lin
library(remotes)
library(crskdiag)
ggsurvplot(km,
data = mela,
surv.median.line = "hv",
# Change legends: title & labels
legend.title = "Ucler",
legend.labs = c("Absent", "Présent"),
# Add p-value and intervals
pval = TRUE,
conf.int = TRUE,
# Add risk table
risk.table = TRUE,
tables.height = 0.2,
tables.theme = theme_cleantable(),
palette = c("#C0B9DD", "#77CB85"),
ggtheme = theme_bw())
#KM
km <- survfit(Surv(time,status)~ulcer,data=mela)
ggsurvplot(km,
data = mela,
surv.median.line = "hv",
# Change legends: title & labels
legend.title = "Ucler",
legend.labs = c("Absent", "Présent"),
# Add p-value and intervals
pval = TRUE,
conf.int = TRUE,
# Add risk table
risk.table = TRUE,
tables.height = 0.2,
tables.theme = theme_cleantable(),
palette = c("#C0B9DD", "#77CB85"),
ggtheme = theme_bw())
#Kalbfleisch et Prentice
KM2<-plot(cuminc(mela$time,mela$status,mela$ulcer),
col=c("blue","red","green","blue","red","green"),lty=c(1,1,2,2,3,3),
xlab="Temps",ylab="Incidence cumulée",
main="Kalbfleish et Prentice")
#test de gray
cuminc(mela$time,mela$status,mela$ulcer)
cov1 <- model.matrix(~ factor(ulcer) +thickness+sex+age+year,data = mela)[, -1] # met en forme les covariables pour le modèle
summary(crr(mela$time,mela$status,cov1=cov1))
mod2<-crr(mela$time,mela$status,cov1=cov1)
for(j in 1:ncol(mod2$res))
scatter.smooth(mod2$uft, mod2$res[,j],
main = names(mod2$coef)[j],
xlab ="Temps",
ylab ="Résidus de Schoenfeld")
#test de lin
library(remotes)
library(crskdiag)
#KM
km <- survfit(Surv(time,status)~ulcer,data=mela)
summary(km)
ggsurvplot(km,
data = mela,
surv.median.line = "hv",
# Change legends: title & labels
legend.title = "Ucler",
legend.labs = c("Absent", "Présent"),
# Add p-value and intervals
pval = TRUE,
conf.int = TRUE,
# Add risk table
risk.table = TRUE,
tables.height = 0.2,
tables.theme = theme_cleantable(),
palette = c("#C0B9DD", "#77CB85"),
ggtheme = theme_bw())
#Kalbfleisch et Prentice
KM2<-plot(cuminc(mela$time,mela$status,mela$ulcer),
col=c("blue","red","green","blue","red","green"),lty=c(1,1,2,2,3,3),
xlab="Temps",ylab="Incidence cumulée",
main="Kalbfleish et Prentice")
#test de gray
cuminc(mela$time,mela$status,mela$ulcer)
cov1 <- model.matrix(~ factor(ulcer) +thickness+sex+age+year,data = mela)[, -1] # met en forme les covariables pour le modèle
summary(crr(mela$time,mela$status,cov1=cov1))
mod2<-crr(mela$time,mela$status,cov1=cov1)
for(j in 1:ncol(mod2$res))
scatter.smooth(mod2$uft, mod2$res[,j],
main = names(mod2$coef)[j],
xlab ="Temps",
ylab ="Résidus de Schoenfeld")
#test de lin
library(remotes)
library(crskdiag)
summary(crr(mela$time,mela$status,cov1=cov1))
#test de gray
cuminc(mela$time,mela$status,mela$ulcer) %>% summary
#test de gray
cuminc(mela$time,mela$status,mela$ulcer)
#comparer le nb d'event obs dans chaque groupe (traitement ici) à ce qui est attendu sous H0
survdiff(Surv(time,status_bin)~ulcer,data=mela)
# estimation de la fonction de survie (proba de ne pas avoir fait l’event avant le temps t ) par la méthode KM
km <- survfit(Surv(time,status_bin)~ulcer,data=mela)
# plot de la fonction de survie estimée
ggsurvplot(km,
data = mela,
surv.median.line = "hv",
# Change legends: title & labels
legend.title = "Ucler",
legend.labs = c("Absent", "Présent"),
# Add p-value and intervals
pval = TRUE,
conf.int = TRUE,
# Add risk table
risk.table = TRUE,
tables.height = 0.2,
tables.theme = theme_cleantable(),
palette = c("#C0B9DD", "#77CB85"),
ggtheme = theme_bw())
# permet de comparer les courbes de survie par le test du logrank
#H0 Egalité des fonctions de survie vs.
#H1 Au moins une des fonctions de survie est différente des autres
#comparer le nb d'event obs dans chaque groupe (traitement ici) à ce qui est attendu sous H0
survdiff(Surv(time,status_bin)~ulcer,data=mela)
mela %>%
mutate(ucler = ulcer %>% as.factor) -> mela
#Creation du modèle de cox
model <- coxph(Surv(time,status_bin)~ulcer+thickness+sex+age+year,data=mela)
summary(model)
# HHP
cox.zph(model)
# Hypothèses de log linéarité
resmart = residuals(model)
# Age
plot(mela$age, resmart, pch = 20)
lines(loess.smooth(mela$age, resmart), lwd=2, col="blue")
plot(mela$age, resmart, pch = 20)
lines(loess.smooth(mela$age, resmart), lwd=2, col="blue")
# Age
plot(mela$age, resmart, pch = 20) +
lines(loess.smooth(mela$age, resmart), lwd=2, col="blue")
# year
plot(mela$year, resmart, pch = 20) +
lines(loess.smooth(mela$year, resmart), lwd=2, col="blue")
# thickness
plot(mela$thickness, resmart, pch = 20)+
lines(loess.smooth(mela$thickness, resmart), lwd=2, col="blue")
mela %>%
group_by(status,ulcer) %>% count
